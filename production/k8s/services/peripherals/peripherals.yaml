apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: peripheral-service-bc
spec:
  healthCheck:
    port: 9000
    type: HTTPS
    requestPath: /healthz
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: peripheral-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: peripheral-service
  template:
    metadata:
      labels:
        app: peripheral-service
    spec:
      containers:
      - name: esp
        image: gcr.io/endpoints-release/endpoints-runtime:2
        args: [
          "--listener_port=9000",
          "--generate_self_signed_cert",
          "--service=peripheral.endpoints.microclimates-299418.cloud.goog",
          "--rollout_strategy=managed",
          "--backend=grpc://127.0.0.1:8080",
          "--enable_debug",
          "-z", "healthz"
        ]
        ports:
          - containerPort: 9000
      - name: backend
        image: docker.io/niole/peripheralservice:3
        env:
          - name: DB_HOST
            value: "database.default.svc.cluster.local"
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: database
                key: mysql_user
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: database
                key: mysql_password
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: database
                key: mysql_database
          - name: PERIPHERAL_SERVER_ADDR
            value: "peripheral-service.default.svc.cluster.local:3000"
          - name: EVENT_SERVER_ADDR
            value: "event-service.default.svc.cluster.local:3000"
        ports:
          - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: peripheral-service
  labels:
    app: peripheral-service
  annotations:
    cloud.google.com/app-protocols: '{"http2":"HTTP2"}'
    cloud.google.com/backend-config: '{"default":"peripheral-service-bc"}'
    cloud.google.com/neg: '{"ingress": true}'
spec:
  type: NodePort
  ports:
  - name: http2
    port: 80
    targetPort: 9000
    protocol: TCP
  - name: internal
    port: 3000
    targetPort: 8080
    protocol: TCP
  selector:
    app: peripheral-service
